@{
    ViewBag.Title = "Dynamic Time Sheet UI";
}
<div id="timeSheet-list">
    <h2>
        Dynamic Time Sheet Details Insert Sample</h2>
    <div id="timeSheetForm">
        <div>
            <div>
                <input type="hidden" id="hdFortnightType" name="hdFortnightType" value="" />
                <input type="hidden" id="hdFortnightDayNumber" name="hdFortnightDayNumber" value="" />
                <input type="hidden" id="hdMergeCellGroupColumnNameList" name="hdMergeCellGroupColumnNameList"
                    value="" />
                <input type="hidden" id="hdFooterColumnNameList" name="hdFooterColumnNameList" value="" />
                <input type="hidden" id="hdFooterTextColumnName" name="hdFooterTextColumnName" value="" />
                <input type="hidden" id="hdMergeColumnHeaderStartColumnName" name="hdMergeColumnHeaderStartColumnName"
                    value="" />
                <input type="hidden" id="hdMergeColumnHeaderNumberOfColumns" name="hdMergeColumnHeaderNumberOfColumns"
                    value="" />
                <input type="hidden" id="hdHighLightColumnNameList" name="hdHighLightColumnNameList"
                    value="" />
                <input type="hidden" id="hdOffDayColumnNameList" name="hd" value="" />
                <input type="hidden" id="hdFlexiValue" name="hd" value="" />
                <input type="hidden" id="hdJqGridUrl" name="hd" value="" />
            </div>
            <div class="editor-field">
                <strong>Fortnight: </strong>
                <input type="radio" id="rdFirstFortnight" name="rdFortnight" value="1" checked="checked" />&nbsp;&nbsp;First
                Fortnight&nbsp;&nbsp;&nbsp;&nbsp;<input type="radio" id="rdSecondFortnight" name="rdFortnight"
                    value="2" />&nbsp;&nbsp;Second Fortnight
            </div>
        </div>
        <br />
        <div>
            <button id="btnLoadGrid" class="button">
                Load Time Sheet
            </button>
        </div>
    </div>
    <br />
    <div id="timeSheet-jq-grid">
        <table id="timeSheetJQGrid" class="scroll" cellpadding="0" cellspacing="0">
        </table>
    </div>
    <br />
    <div id="timeSheet-button">
        <button id="btnSave" class="button">
            Save
        </button>
    </div>
</div>
<style type="text/css">
    .offday-highlight
    {
        color: #00000 !important;
        background-color: #FCF8E3 !important;
    }
    
    .ui-jqgrid tr.jqgrow td
    {
        word-wrap: break-word !important; /* IE 5.5+ and CSS3 */
        white-space: pre-wrap !important; /* CSS3 */
        white-space: -moz-pre-wrap !important; /* Mozilla, since 1999 */
        white-space: -pre-wrap !important; /* Opera 4-6 */
        white-space: -o-pre-wrap !important; /* Opera 7 */
    }
    
    .chk-projectno
    {
    }
    
    .lbl-projectno
    {
    }
    
    .rb-submitted
    {
    }
    
    .chk-complete
    {
    }
    
    .approval-status
    {
    }
    
    .ul-submitted
    {
        padding: 0px !important;
        list-style: none !important;
        margin: 0px !important;
    }
</style>
<script type="text/javascript">

    function ProjectCheck(id) {
        console.log(id);
    }

    function CompleteCheck(id) {
        console.log(id);
    }

    function BuildJqGridColModel(gridColumnModelList) {

        var colModelList = [];
        for (var i = 0; i < gridColumnModelList.length; i++) {

            var columnName = gridColumnModelList[i];

            //Start switch
            switch (columnName) {
                case "Id":
                    colModelList.push({ name: columnName, index: columnName, key: true, hidden: true });
                    break;
                case "ProjectNo":
                    colModelList.push({ name: columnName, index: columnName, hidden: true });
                    break;
                case "ProjectText":
                    colModelList.push({ name: columnName, index: columnName, width: 100 });
                    break;
                case "IsProject":
                    colModelList.push({ name: columnName, index: columnName, hidden: true });
                    break;
                case "IsApprovalStatus":
                    colModelList.push({ name: columnName, index: columnName, hidden: true });
                    break;
                case "ApprovalStatus":
                    colModelList.push({ name: columnName, index: columnName, width: 120, align: 'center' });
                    break;
                case "IsSubmittedTo":
                    colModelList.push({ name: columnName, index: columnName, hidden: true });
                    break;
                case "SubmittedTo":
                    colModelList.push({ name: columnName, index: columnName, hidden: true });
                    break;
                case "SubmittedText":
                    colModelList.push({ name: columnName, index: columnName, width: 120, align: 'center' });
                    break;
                case "IsActivity":
                    colModelList.push({ name: columnName, index: columnName, hidden: true });
                    break;
                case "Activity":
                    colModelList.push({ name: columnName, index: columnName, width: 200, align: 'center' });
                    break;
                case "IsCompleted":
                    colModelList.push({ name: columnName, index: columnName, hidden: true });
                    break;
                case "Completed":
                    colModelList.push({ name: columnName, index: columnName, hidden: true });
                    break;
                case "CompletedText":
                    colModelList.push({ name: columnName, index: columnName, width: 100, align: 'center' });
                    break;
                case "IsEdited":
                    colModelList.push({ name: columnName, index: columnName, hidden: true, editable: true });
                    break;
                default:
                    var parseValue = parseFloat(columnName);
                    if (parseValue >= 1 && parseValue <= 31) {

                        colModelList.push({ name: columnName, index: columnName, width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} });

                    }
            }
            //End switch

        } //End for

        return colModelList;

    }

    function CreateTimeSheetJqGrid(gridColumnNameList, gridColumnModelList) {

        $("#timeSheetJQGrid").jqGrid({
            url: "/Demo/GetTimeSheetDetailsData",
            datatype: "json",
            mtype: 'POST',
            colNames: gridColumnNameList,
            //colModel: gridColumnModelList,
            colModel: [
                                                { name: 'Id', index: 'Id', key: true, hidden: true },
                                                { name: 'ProjectNo', index: 'ProjectNo', hidden: true },
                                                { name: 'ProjectText', index: 'ProjectText', width: 100, align: 'left', hidden: false },
                                                { name: 'IsProject', index: 'IsProject', hidden: true },
                                                { name: 'IsApprovalStatus', index: 'IsApprovalStatus', hidden: true },
                                                { name: 'ApprovalStatus', index: 'ApprovalStatus', width: 120, align: 'center' },
                                                { name: 'IsSubmittedTo', index: 'IsSubmittedTo', hidden: true },
                                                { name: 'SubmittedTo', index: 'SubmittedTo', hidden: true },
                                                { name: 'SubmittedText', index: 'SubmittedText', width: 200, align: 'center' },

                                                { name: 'IsActivity', index: 'IsActivity', hidden: true },
                                                { name: 'Activity', index: 'Activity', width: 100, align: 'center' },
                                                { name: 'IsCompleted', index: 'IsCompleted', hidden: true },
                                                { name: 'Completed', index: 'Completed', hidden: true },
                                                { name: 'CompletedText', index: 'CompletedText', width: 100, align: 'center' },
                                                { name: 'IsEdited', index: 'IsEdited', hidden: true, editable: true },

                                                { name: 'DayOne', index: 'DayOne', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'DayTwo', index: 'DayTwo', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'DayThree', index: 'DayThree', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'DayFour', index: 'DayFour', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'DayFive', index: 'DayFive', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} }
                                                ],
            cmTemplate: { sortable: false },
            cellEdit: true,
            cellsubmit: 'clientArray',
            height: 'auto',
            autowidth: true,
            grouping: false,
            sortname: 'id',                     //default sort column name
            sortorder: "desc",                       //sorting order
            viewrecords: true,                         //by default records show?
            loadonce: false,
            multiselect: false,                        //checkbox list
            //shrinkToFit: true,
            footerrow: true,
            loadComplete: function (data) {

                //Get Hidden Field Value
                var hdMergeCellGroupColumnNameListValue = $("#hdMergeCellGroupColumnNameList").val();
                var hdFooterColumnNameListValue = $("#hdFooterColumnNameList").val();
                var hdFooterTextColumnNameValue = $("#hdFooterTextColumnName").val();
                var hdMergeColumnHeaderStartColumnNameValue = $("#hdMergeColumnHeaderStartColumnName").val();
                var hdMergeColumnHeaderNumberOfColumnsValue = $("#hdMergeColumnHeaderNumberOfColumns").val();
                var hdHighLightColumnNameListValue = $("#hdHighLightColumnNameList").val();
                var hdJqGridUrlValue = $("#hdJqGridUrl").val();
                //Get Hidden Field Value

                //Pass To Array Hidden Field Value
                var mergeCellGroupColumnNameList = hdMergeCellGroupColumnNameListValue.split(",");
                var footerColumnNameList = hdFooterColumnNameListValue.split(",");
                var footerTextColumnName = hdFooterTextColumnNameValue;
                var mergeColumnHeaderStartColumnName = hdMergeColumnHeaderStartColumnNameValue;
                var mergeColumnHeaderNumberOfColumns = hdMergeColumnHeaderNumberOfColumnsValue;
                var highLightColumnNameList = hdHighLightColumnNameListValue.split(",");
                var jqGridUrl = hdJqGridUrlValue;
                //Pass To Array Hidden Field Value

                //Merge Cell Need: columnNameList FROM SERVER ( mergeCellGroupColumnNameList )
                MergeGridCellGroupWise('timeSheetJQGrid', columnNameList = mergeCellGroupColumnNameList);

                //Set Total an Grand Total Need: columnNameList, footerTextColumnName FROM SERVER (footerColumnNameList, footerTextColumnName)
                SetFooterTotalAndFlexiColumnWise('timeSheetJQGrid', this, columnNameList = footerColumnNameList, footerTextColumnName = footerTextColumnName);

                //Merge GridColumns Header Need: startColumnName, numberOfColumns FROM SERVER ( mergeColumnHeaderStartColumnName, mergeColumnHeaderNumberOfColumns )
                MergeGridColumnsHeader('timeSheetJQGrid', mergeColumnHeaderStartColumnName, mergeColumnHeaderNumberOfColumns, "Days");

                //GridColumn HighLight Need: columnNameList FROM SERVER ( highLightColumnNameList )
                SetGridColumnHighLight('timeSheetJQGrid', columnNameList = highLightColumnNameList);

            },
            loadError: function (xhr, status, str) {   //function calling when grid load exception occured 
                console.log(xhr.msg);           //set div text by error message
            },
            afterSaveCell: function (rowid, name, val, iRow, iCol) {

                if (rowid != 0) {

                    //Get Hidden Field Value
                    var hdOffDayColumnNameListValue = $("#hdOffDayColumnNameList").val();
                    var hdFlexiValueValue = $("#hdFlexiValue").val();
                    //Get Hidden Field Value

                    //Pass To Array Hidden Field Value
                    var offDayColumnNameList = hdOffDayColumnNameListValue.split(",");
                    var flexiValue = hdFlexiValueValue;
                    //Pass To Array Hidden Field Value


                    //Calculate FooterData
                    CalculateFooterTotalAndFlexiWithOffDay('timeSheetJQGrid', this, rowid, name, val, flexiValue, offDayColumnNameList = offDayColumnNameList);

                    //Set Row Data
                    $(this).jqGrid('setCell', rowid, 'IsEdited', 'True');
                }

                return false;
            },
            afterEditCell: function (rowid, name, val, iRow, iCol) {
                if (rowid != 0) { }
                return false;
            },
            errorCell: function () {                   //function calling when cell exception occured
                console.log('An error has occurred while processing your request.');
            }

        });

        return false;
    }

    function SetHiddenFieldValue(dataObj) {
        $("#hdFortnightType").val(dataObj.FortnightType);
        $("#hdFortnightDayNumber").val(dataObj.FortnightDayNumber);
        $("#hdMergeCellGroupColumnNameList").val(dataObj.MergeCellGroupColumnNameList);
        $("#hdFooterColumnNameList").val(dataObj.FooterColumnNameList);
        $("#hdFooterTextColumnName").val(dataObj.FooterTextColumnName);
        $("#hdMergeColumnHeaderStartColumnName").val(dataObj.MergeColumnHeaderStartColumnName);
        $("#hdMergeColumnHeaderNumberOfColumns").val(dataObj.MergeColumnHeaderNumberOfColumns);
        $("#hdHighLightColumnNameList").val(dataObj.HighLightColumnNameList);
        $("#hdOffDayColumnNameList").val(dataObj.OffDayColumnNameList);
        $("#hdFlexiValue").val(dataObj.FlexiValue);
        $("#hdJqGridUrl").val(dataObj.JqGridUrl);
    }

    //function CreateTimeSheetJqGridForFirstFortnight(gridId, gridUrl, gridColumnNameList, gridColumnModelList) 
    function CreateTimeSheetJqGridForFirstFortnight(gridId, gridUrl) {

        $('#' + gridId).jqGrid({
            url: gridUrl,
            datatype: "json",
            mtype: 'POST',
            colNames: [
                    'Id',
                    'ProjectNo',
                    'Project No',
                    'IsProject',
                    'IsApprovalStatus',
                    'Approval Status',
                    'IsSubmittedTo',
                    'SubmittedTo',
                    'Submitted To',
                    'IsActivity',
                    'Activity',
                    'IsCompleted',
                    'Completed',
                    'Is Complete',
                    'IsEdited',

                    '1',
                    '2',
                    '3',
                    '4',
                    '5',
                    '6',
                    '7',
                    '8',
                    '9',
                    '10',
                    '11',
                    '12',
                    '13',
                    '14',
                    '15'
                    ],
            //colNames: gridColumnNameList,
            //colModel: gridColumnModelList,
            colModel: [
                                                { name: 'Id', index: 'Id', key: true, hidden: true },
                                                { name: 'ProjectNo', index: 'ProjectNo', hidden: true },
                                                { name: 'ProjectText', index: 'ProjectText', width: 100, align: 'left', hidden: false },
                                                { name: 'IsProject', index: 'IsProject', hidden: true },
                                                { name: 'IsApprovalStatus', index: 'IsApprovalStatus', hidden: true },
                                                { name: 'ApprovalStatus', index: 'ApprovalStatus', width: 120, align: 'center' },
                                                { name: 'IsSubmittedTo', index: 'IsSubmittedTo', hidden: true },
                                                { name: 'SubmittedTo', index: 'SubmittedTo', hidden: true },
                                                { name: 'SubmittedText', index: 'SubmittedText', width: 200, align: 'center' },

                                                { name: 'IsActivity', index: 'IsActivity', hidden: true },
                                                { name: 'Activity', index: 'Activity', width: 100, align: 'center' },
                                                { name: 'IsCompleted', index: 'IsCompleted', hidden: true },
                                                { name: 'Completed', index: 'Completed', hidden: true },
                                                { name: 'CompletedText', index: 'CompletedText', width: 100, align: 'center' },
                                                { name: 'IsEdited', index: 'IsEdited', hidden: true, editable: true },

                                                { name: 'Day1', index: 'Day1', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day2', index: 'Day2', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day3', index: 'Day3', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day4', index: 'Day4', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day5', index: 'Day5', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day6', index: 'Day6', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day7', index: 'Day7', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day8', index: 'Day8', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day9', index: 'Day9', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day10', index: 'Day10', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day11', index: 'Day11', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day12', index: 'Day12', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day13', index: 'Day13', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day14', index: 'Day14', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day15', index: 'Day15', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} }
                                                ],
            cmTemplate: { sortable: false },
            cellEdit: true,
            cellsubmit: 'clientArray',
            height: 'auto',
            autowidth: true,
            grouping: false,
            sortname: 'id',                     //default sort column name
            sortorder: "desc",                       //sorting order
            viewrecords: true,                         //by default records show?
            loadonce: false,
            multiselect: false,                        //checkbox list
            //shrinkToFit: true,
            footerrow: true,
            loadComplete: function (data) {

                //Get Hidden Field Value
                var hdMergeCellGroupColumnNameListValue = $("#hdMergeCellGroupColumnNameList").val();
                var hdFooterColumnNameListValue = $("#hdFooterColumnNameList").val();
                var hdFooterTextColumnNameValue = $("#hdFooterTextColumnName").val();
                var hdMergeColumnHeaderStartColumnNameValue = $("#hdMergeColumnHeaderStartColumnName").val();
                var hdMergeColumnHeaderNumberOfColumnsValue = $("#hdMergeColumnHeaderNumberOfColumns").val();
                var hdHighLightColumnNameListValue = $("#hdHighLightColumnNameList").val();
                var hdJqGridUrlValue = $("#hdJqGridUrl").val();
                //Get Hidden Field Value

                //Pass To Array Hidden Field Value
                var mergeCellGroupColumnNameList = hdMergeCellGroupColumnNameListValue.split(",");
                var footerColumnNameList = hdFooterColumnNameListValue.split(",");
                var footerTextColumnName = hdFooterTextColumnNameValue;
                var mergeColumnHeaderStartColumnName = hdMergeColumnHeaderStartColumnNameValue;
                var mergeColumnHeaderNumberOfColumns = hdMergeColumnHeaderNumberOfColumnsValue;
                var highLightColumnNameList = hdHighLightColumnNameListValue.split(",");
                var jqGridUrl = hdJqGridUrlValue;
                //Pass To Array Hidden Field Value

                //Merge Cell Need: columnNameList FROM SERVER ( mergeCellGroupColumnNameList )
                MergeGridCellGroupWise('timeSheetJQGrid', columnNameList = mergeCellGroupColumnNameList);

                //Set Total an Grand Total Need: columnNameList, footerTextColumnName FROM SERVER (footerColumnNameList, footerTextColumnName)
                SetFooterTotalAndFlexiColumnWise('timeSheetJQGrid', this, columnNameList = footerColumnNameList, footerTextColumnName = footerTextColumnName);

                //Merge GridColumns Header Need: startColumnName, numberOfColumns FROM SERVER ( mergeColumnHeaderStartColumnName, mergeColumnHeaderNumberOfColumns )
                MergeGridColumnsHeader('timeSheetJQGrid', mergeColumnHeaderStartColumnName, mergeColumnHeaderNumberOfColumns, "Days");

                //GridColumn HighLight Need: columnNameList FROM SERVER ( highLightColumnNameList )
                SetGridColumnHighLight('timeSheetJQGrid', columnNameList = highLightColumnNameList);

            },
            loadError: function (xhr, status, str) {   //function calling when grid load exception occured 
                console.log(xhr.msg);           //set div text by error message
            },
            afterSaveCell: function (rowid, name, val, iRow, iCol) {

                if (rowid != 0) {

                    //Get Hidden Field Value
                    var hdOffDayColumnNameListValue = $("#hdOffDayColumnNameList").val();
                    var hdFlexiValueValue = $("#hdFlexiValue").val();
                    //Get Hidden Field Value

                    //Pass To Array Hidden Field Value
                    var offDayColumnNameList = hdOffDayColumnNameListValue.split(",");
                    var flexiValue = hdFlexiValueValue;
                    //Pass To Array Hidden Field Value


                    //Calculate FooterData
                    CalculateFooterTotalAndFlexiWithOffDay('timeSheetJQGrid', this, rowid, name, val, flexiValue, offDayColumnNameList = offDayColumnNameList);

                    //Set Row Data
                    $(this).jqGrid('setCell', rowid, 'IsEdited', 'True');
                }

                return false;
            },
            afterEditCell: function (rowid, name, val, iRow, iCol) {
                if (rowid != 0) { }
                return false;
            },
            errorCell: function () {                   //function calling when cell exception occured
                console.log('An error has occurred while processing your request.');
            }

        });

        return false;
    }

    //function CreateTimeSheetJqGridForSecondFortnightOf16Days(gridId, gridUrl, gridColumnNameList, gridColumnModelList) 
    function CreateTimeSheetJqGridForSecondFortnightOf16Days(gridId, gridUrl) {

        $('#' + gridId).jqGrid({
            url: gridUrl,
            datatype: "json",
            mtype: 'POST',
            colNames: [
                    'Id',
                    'ProjectNo',
                    'Project No',
                    'IsProject',
                    'IsApprovalStatus',
                    'Approval Status',
                    'IsSubmittedTo',
                    'SubmittedTo',
                    'Submitted To',
                    'IsActivity',
                    'Activity',
                    'IsCompleted',
                    'Completed',
                    'Is Complete',
                    'IsEdited',

                    '16',
                    '17',
                    '18',
                    '19',
                    '20',
                    '21',
                    '22',
                    '23',
                    '24',
                    '25',
                    '26',
                    '27',
                    '28',
                    '29',
                    '30',
                    '31'
                    ],
            //colNames: gridColumnNameList,
            //colModel: gridColumnModelList,
            colModel: [
                                                { name: 'Id', index: 'Id', key: true, hidden: true },
                                                { name: 'ProjectNo', index: 'ProjectNo', hidden: true },
                                                { name: 'ProjectText', index: 'ProjectText', width: 100, align: 'left', hidden: false },
                                                { name: 'IsProject', index: 'IsProject', hidden: true },
                                                { name: 'IsApprovalStatus', index: 'IsApprovalStatus', hidden: true },
                                                { name: 'ApprovalStatus', index: 'ApprovalStatus', width: 120, align: 'center' },
                                                { name: 'IsSubmittedTo', index: 'IsSubmittedTo', hidden: true },
                                                { name: 'SubmittedTo', index: 'SubmittedTo', hidden: true },
                                                { name: 'SubmittedText', index: 'SubmittedText', width: 200, align: 'center' },

                                                { name: 'IsActivity', index: 'IsActivity', hidden: true },
                                                { name: 'Activity', index: 'Activity', width: 100, align: 'center' },
                                                { name: 'IsCompleted', index: 'IsCompleted', hidden: true },
                                                { name: 'Completed', index: 'Completed', hidden: true },
                                                { name: 'CompletedText', index: 'CompletedText', width: 100, align: 'center' },
                                                { name: 'IsEdited', index: 'IsEdited', hidden: true, editable: true },

                                                { name: 'Day16', index: 'Day16', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day17', index: 'Day17', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day18', index: 'Day18', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day19', index: 'Day19', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day20', index: 'Day20', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day21', index: 'Day21', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day22', index: 'Day22', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day23', index: 'Day23', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day24', index: 'Day24', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day25', index: 'Day25', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day26', index: 'Day26', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day27', index: 'Day27', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day28', index: 'Day28', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day29', index: 'Day29', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day30', index: 'Day30', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day31', index: 'Day30', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} }
                                                ],
            cmTemplate: { sortable: false },
            cellEdit: true,
            cellsubmit: 'clientArray',
            height: 'auto',
            autowidth: true,
            grouping: false,
            sortname: 'id',                     //default sort column name
            sortorder: "desc",                       //sorting order
            viewrecords: true,                         //by default records show?
            loadonce: false,
            multiselect: false,                        //checkbox list
            //shrinkToFit: true,
            footerrow: true,
            loadComplete: function (data) {

                //Get Hidden Field Value
                var hdMergeCellGroupColumnNameListValue = $("#hdMergeCellGroupColumnNameList").val();
                var hdFooterColumnNameListValue = $("#hdFooterColumnNameList").val();
                var hdFooterTextColumnNameValue = $("#hdFooterTextColumnName").val();
                var hdMergeColumnHeaderStartColumnNameValue = $("#hdMergeColumnHeaderStartColumnName").val();
                var hdMergeColumnHeaderNumberOfColumnsValue = $("#hdMergeColumnHeaderNumberOfColumns").val();
                var hdHighLightColumnNameListValue = $("#hdHighLightColumnNameList").val();
                var hdJqGridUrlValue = $("#hdJqGridUrl").val();
                //Get Hidden Field Value

                //Pass To Array Hidden Field Value
                var mergeCellGroupColumnNameList = hdMergeCellGroupColumnNameListValue.split(",");
                var footerColumnNameList = hdFooterColumnNameListValue.split(",");
                var footerTextColumnName = hdFooterTextColumnNameValue;
                var mergeColumnHeaderStartColumnName = hdMergeColumnHeaderStartColumnNameValue;
                var mergeColumnHeaderNumberOfColumns = hdMergeColumnHeaderNumberOfColumnsValue;
                var highLightColumnNameList = hdHighLightColumnNameListValue.split(",");
                var jqGridUrl = hdJqGridUrlValue;
                //Pass To Array Hidden Field Value

                //Merge Cell Need: columnNameList FROM SERVER ( mergeCellGroupColumnNameList )
                MergeGridCellGroupWise('timeSheetJQGrid', columnNameList = mergeCellGroupColumnNameList);

                //Set Total an Grand Total Need: columnNameList, footerTextColumnName FROM SERVER (footerColumnNameList, footerTextColumnName)
                SetFooterTotalAndFlexiColumnWise('timeSheetJQGrid', this, columnNameList = footerColumnNameList, footerTextColumnName = footerTextColumnName);

                //Merge GridColumns Header Need: startColumnName, numberOfColumns FROM SERVER ( mergeColumnHeaderStartColumnName, mergeColumnHeaderNumberOfColumns )
                MergeGridColumnsHeader('timeSheetJQGrid', mergeColumnHeaderStartColumnName, mergeColumnHeaderNumberOfColumns, "Days");

                //GridColumn HighLight Need: columnNameList FROM SERVER ( highLightColumnNameList )
                SetGridColumnHighLight('timeSheetJQGrid', columnNameList = highLightColumnNameList);

            },
            loadError: function (xhr, status, str) {   //function calling when grid load exception occured 
                console.log(xhr.msg);           //set div text by error message
            },
            afterSaveCell: function (rowid, name, val, iRow, iCol) {

                if (rowid != 0) {

                    //Get Hidden Field Value
                    var hdOffDayColumnNameListValue = $("#hdOffDayColumnNameList").val();
                    var hdFlexiValueValue = $("#hdFlexiValue").val();
                    //Get Hidden Field Value

                    //Pass To Array Hidden Field Value
                    var offDayColumnNameList = hdOffDayColumnNameListValue.split(",");
                    var flexiValue = hdFlexiValueValue;
                    //Pass To Array Hidden Field Value


                    //Calculate FooterData
                    CalculateFooterTotalAndFlexiWithOffDay('timeSheetJQGrid', this, rowid, name, val, flexiValue, offDayColumnNameList = offDayColumnNameList);

                    //Set Row Data
                    $(this).jqGrid('setCell', rowid, 'IsEdited', 'True');
                }

                return false;
            },
            afterEditCell: function (rowid, name, val, iRow, iCol) {
                if (rowid != 0) { }
                return false;
            },
            errorCell: function () {                   //function calling when cell exception occured
                console.log('An error has occurred while processing your request.');
            }

        });

        return false;
    }

    //function CreateTimeSheetJqGridForSecondFortnightOf15Days(gridId, gridUrl, gridColumnNameList, gridColumnModelList) 
    function CreateTimeSheetJqGridForSecondFortnightOf15Days(gridId, gridUrl) {

        $('#' + gridId).jqGrid({
            url: gridUrl,
            datatype: "json",
            mtype: 'POST',
            colNames: [
                    'Id',
                    'ProjectNo',
                    'Project No',
                    'IsProject',
                    'IsApprovalStatus',
                    'Approval Status',
                    'IsSubmittedTo',
                    'SubmittedTo',
                    'Submitted To',
                    'IsActivity',
                    'Activity',
                    'IsCompleted',
                    'Completed',
                    'Is Complete',
                    'IsEdited',

                    '16',
                    '17',
                    '18',
                    '19',
                    '20',
                    '21',
                    '22',
                    '23',
                    '24',
                    '25',
                    '26',
                    '27',
                    '28',
                    '29',
                    '30'
                    ],
            //colNames: gridColumnNameList,
            //colModel: gridColumnModelList,
            colModel: [
                                                { name: 'Id', index: 'Id', key: true, hidden: true },
                                                { name: 'ProjectNo', index: 'ProjectNo', hidden: true },
                                                { name: 'ProjectText', index: 'ProjectText', width: 100, align: 'left', hidden: false },
                                                { name: 'IsProject', index: 'IsProject', hidden: true },
                                                { name: 'IsApprovalStatus', index: 'IsApprovalStatus', hidden: true },
                                                { name: 'ApprovalStatus', index: 'ApprovalStatus', width: 120, align: 'center' },
                                                { name: 'IsSubmittedTo', index: 'IsSubmittedTo', hidden: true },
                                                { name: 'SubmittedTo', index: 'SubmittedTo', hidden: true },
                                                { name: 'SubmittedText', index: 'SubmittedText', width: 200, align: 'center' },

                                                { name: 'IsActivity', index: 'IsActivity', hidden: true },
                                                { name: 'Activity', index: 'Activity', width: 100, align: 'center' },
                                                { name: 'IsCompleted', index: 'IsCompleted', hidden: true },
                                                { name: 'Completed', index: 'Completed', hidden: true },
                                                { name: 'CompletedText', index: 'CompletedText', width: 100, align: 'center' },
                                                { name: 'IsEdited', index: 'IsEdited', hidden: true, editable: true },

                                                { name: 'Day16', index: 'Day16', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day17', index: 'Day17', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day18', index: 'Day18', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day19', index: 'Day19', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day20', index: 'Day20', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day21', index: 'Day21', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day22', index: 'Day22', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day23', index: 'Day23', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day24', index: 'Day24', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day25', index: 'Day25', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day26', index: 'Day26', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day27', index: 'Day27', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day28', index: 'Day28', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day29', index: 'Day29', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day30', index: 'Day30', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} }
                                                ],
            cmTemplate: { sortable: false },
            cellEdit: true,
            cellsubmit: 'clientArray',
            height: 'auto',
            autowidth: true,
            grouping: false,
            sortname: 'id',                     //default sort column name
            sortorder: "desc",                       //sorting order
            viewrecords: true,                         //by default records show?
            loadonce: false,
            multiselect: false,                        //checkbox list
            //shrinkToFit: true,
            footerrow: true,
            loadComplete: function (data) {

                //Get Hidden Field Value
                var hdMergeCellGroupColumnNameListValue = $("#hdMergeCellGroupColumnNameList").val();
                var hdFooterColumnNameListValue = $("#hdFooterColumnNameList").val();
                var hdFooterTextColumnNameValue = $("#hdFooterTextColumnName").val();
                var hdMergeColumnHeaderStartColumnNameValue = $("#hdMergeColumnHeaderStartColumnName").val();
                var hdMergeColumnHeaderNumberOfColumnsValue = $("#hdMergeColumnHeaderNumberOfColumns").val();
                var hdHighLightColumnNameListValue = $("#hdHighLightColumnNameList").val();
                var hdJqGridUrlValue = $("#hdJqGridUrl").val();
                //Get Hidden Field Value

                //Pass To Array Hidden Field Value
                var mergeCellGroupColumnNameList = hdMergeCellGroupColumnNameListValue.split(",");
                var footerColumnNameList = hdFooterColumnNameListValue.split(",");
                var footerTextColumnName = hdFooterTextColumnNameValue;
                var mergeColumnHeaderStartColumnName = hdMergeColumnHeaderStartColumnNameValue;
                var mergeColumnHeaderNumberOfColumns = hdMergeColumnHeaderNumberOfColumnsValue;
                var highLightColumnNameList = hdHighLightColumnNameListValue.split(",");
                var jqGridUrl = hdJqGridUrlValue;
                //Pass To Array Hidden Field Value

                //Merge Cell Need: columnNameList FROM SERVER ( mergeCellGroupColumnNameList )
                MergeGridCellGroupWise('timeSheetJQGrid', columnNameList = mergeCellGroupColumnNameList);

                //Set Total an Grand Total Need: columnNameList, footerTextColumnName FROM SERVER (footerColumnNameList, footerTextColumnName)
                SetFooterTotalAndFlexiColumnWise('timeSheetJQGrid', this, columnNameList = footerColumnNameList, footerTextColumnName = footerTextColumnName);

                //Merge GridColumns Header Need: startColumnName, numberOfColumns FROM SERVER ( mergeColumnHeaderStartColumnName, mergeColumnHeaderNumberOfColumns )
                MergeGridColumnsHeader('timeSheetJQGrid', mergeColumnHeaderStartColumnName, mergeColumnHeaderNumberOfColumns, "Days");

                //GridColumn HighLight Need: columnNameList FROM SERVER ( highLightColumnNameList )
                SetGridColumnHighLight('timeSheetJQGrid', columnNameList = highLightColumnNameList);

            },
            loadError: function (xhr, status, str) {   //function calling when grid load exception occured 
                console.log(xhr.msg);           //set div text by error message
            },
            afterSaveCell: function (rowid, name, val, iRow, iCol) {

                if (rowid != 0) {

                    //Get Hidden Field Value
                    var hdOffDayColumnNameListValue = $("#hdOffDayColumnNameList").val();
                    var hdFlexiValueValue = $("#hdFlexiValue").val();
                    //Get Hidden Field Value

                    //Pass To Array Hidden Field Value
                    var offDayColumnNameList = hdOffDayColumnNameListValue.split(",");
                    var flexiValue = hdFlexiValueValue;
                    //Pass To Array Hidden Field Value


                    //Calculate FooterData
                    CalculateFooterTotalAndFlexiWithOffDay('timeSheetJQGrid', this, rowid, name, val, flexiValue, offDayColumnNameList = offDayColumnNameList);

                    //Set Row Data
                    $(this).jqGrid('setCell', rowid, 'IsEdited', 'True');
                }

                return false;
            },
            afterEditCell: function (rowid, name, val, iRow, iCol) {
                if (rowid != 0) { }
                return false;
            },
            errorCell: function () {                   //function calling when cell exception occured
                console.log('An error has occurred while processing your request.');
            }

        });

        return false;
    }

    //function CreateTimeSheetJqGridForSecondFortnightOf14Days(gridId, gridUrl, gridColumnNameList, gridColumnModelList) 
    function CreateTimeSheetJqGridForSecondFortnightOf14Days(gridId, gridUrl) {

        $('#' + gridId).jqGrid({
            url: gridUrl,
            datatype: "json",
            mtype: 'POST',
            colNames: [
                    'Id',
                    'ProjectNo',
                    'Project No',
                    'IsProject',
                    'IsApprovalStatus',
                    'Approval Status',
                    'IsSubmittedTo',
                    'SubmittedTo',
                    'Submitted To',
                    'IsActivity',
                    'Activity',
                    'IsCompleted',
                    'Completed',
                    'Is Complete',
                    'IsEdited',

                    '16',
                    '17',
                    '18',
                    '19',
                    '20',
                    '21',
                    '22',
                    '23',
                    '24',
                    '25',
                    '26',
                    '27',
                    '28',
                    '29'
                    ],
            //colNames: gridColumnNameList,
            //colModel: gridColumnModelList,
            colModel: [
                                                { name: 'Id', index: 'Id', key: true, hidden: true },
                                                { name: 'ProjectNo', index: 'ProjectNo', hidden: true },
                                                { name: 'ProjectText', index: 'ProjectText', width: 100, align: 'left', hidden: false },
                                                { name: 'IsProject', index: 'IsProject', hidden: true },
                                                { name: 'IsApprovalStatus', index: 'IsApprovalStatus', hidden: true },
                                                { name: 'ApprovalStatus', index: 'ApprovalStatus', width: 120, align: 'center' },
                                                { name: 'IsSubmittedTo', index: 'IsSubmittedTo', hidden: true },
                                                { name: 'SubmittedTo', index: 'SubmittedTo', hidden: true },
                                                { name: 'SubmittedText', index: 'SubmittedText', width: 200, align: 'center' },

                                                { name: 'IsActivity', index: 'IsActivity', hidden: true },
                                                { name: 'Activity', index: 'Activity', width: 100, align: 'center' },
                                                { name: 'IsCompleted', index: 'IsCompleted', hidden: true },
                                                { name: 'Completed', index: 'Completed', hidden: true },
                                                { name: 'CompletedText', index: 'CompletedText', width: 100, align: 'center' },
                                                { name: 'IsEdited', index: 'IsEdited', hidden: true, editable: true },

                                                { name: 'Day16', index: 'Day16', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day17', index: 'Day17', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day18', index: 'Day18', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day19', index: 'Day19', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day20', index: 'Day20', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day21', index: 'Day21', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day22', index: 'Day22', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day23', index: 'Day23', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day24', index: 'Day24', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day25', index: 'Day25', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day26', index: 'Day26', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day27', index: 'Day27', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day28', index: 'Day28', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day29', index: 'Day29', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} }
                                                ],
            cmTemplate: { sortable: false },
            cellEdit: true,
            cellsubmit: 'clientArray',
            height: 'auto',
            autowidth: true,
            grouping: false,
            sortname: 'id',                     //default sort column name
            sortorder: "desc",                       //sorting order
            viewrecords: true,                         //by default records show?
            loadonce: false,
            multiselect: false,                        //checkbox list
            //shrinkToFit: true,
            footerrow: true,
            loadComplete: function (data) {

                //Get Hidden Field Value
                var hdMergeCellGroupColumnNameListValue = $("#hdMergeCellGroupColumnNameList").val();
                var hdFooterColumnNameListValue = $("#hdFooterColumnNameList").val();
                var hdFooterTextColumnNameValue = $("#hdFooterTextColumnName").val();
                var hdMergeColumnHeaderStartColumnNameValue = $("#hdMergeColumnHeaderStartColumnName").val();
                var hdMergeColumnHeaderNumberOfColumnsValue = $("#hdMergeColumnHeaderNumberOfColumns").val();
                var hdHighLightColumnNameListValue = $("#hdHighLightColumnNameList").val();
                var hdJqGridUrlValue = $("#hdJqGridUrl").val();
                //Get Hidden Field Value

                //Pass To Array Hidden Field Value
                var mergeCellGroupColumnNameList = hdMergeCellGroupColumnNameListValue.split(",");
                var footerColumnNameList = hdFooterColumnNameListValue.split(",");
                var footerTextColumnName = hdFooterTextColumnNameValue;
                var mergeColumnHeaderStartColumnName = hdMergeColumnHeaderStartColumnNameValue;
                var mergeColumnHeaderNumberOfColumns = hdMergeColumnHeaderNumberOfColumnsValue;
                var highLightColumnNameList = hdHighLightColumnNameListValue.split(",");
                var jqGridUrl = hdJqGridUrlValue;
                //Pass To Array Hidden Field Value

                //Merge Cell Need: columnNameList FROM SERVER ( mergeCellGroupColumnNameList )
                MergeGridCellGroupWise('timeSheetJQGrid', columnNameList = mergeCellGroupColumnNameList);

                //Set Total an Grand Total Need: columnNameList, footerTextColumnName FROM SERVER (footerColumnNameList, footerTextColumnName)
                SetFooterTotalAndFlexiColumnWise('timeSheetJQGrid', this, columnNameList = footerColumnNameList, footerTextColumnName = footerTextColumnName);

                //Merge GridColumns Header Need: startColumnName, numberOfColumns FROM SERVER ( mergeColumnHeaderStartColumnName, mergeColumnHeaderNumberOfColumns )
                MergeGridColumnsHeader('timeSheetJQGrid', mergeColumnHeaderStartColumnName, mergeColumnHeaderNumberOfColumns, "Days");

                //GridColumn HighLight Need: columnNameList FROM SERVER ( highLightColumnNameList )
                SetGridColumnHighLight('timeSheetJQGrid', columnNameList = highLightColumnNameList);

            },
            loadError: function (xhr, status, str) {   //function calling when grid load exception occured 
                console.log(xhr.msg);           //set div text by error message
            },
            afterSaveCell: function (rowid, name, val, iRow, iCol) {

                if (rowid != 0) {

                    //Get Hidden Field Value
                    var hdOffDayColumnNameListValue = $("#hdOffDayColumnNameList").val();
                    var hdFlexiValueValue = $("#hdFlexiValue").val();
                    //Get Hidden Field Value

                    //Pass To Array Hidden Field Value
                    var offDayColumnNameList = hdOffDayColumnNameListValue.split(",");
                    var flexiValue = hdFlexiValueValue;
                    //Pass To Array Hidden Field Value


                    //Calculate FooterData
                    CalculateFooterTotalAndFlexiWithOffDay('timeSheetJQGrid', this, rowid, name, val, flexiValue, offDayColumnNameList = offDayColumnNameList);

                    //Set Row Data
                    $(this).jqGrid('setCell', rowid, 'IsEdited', 'True');
                }

                return false;
            },
            afterEditCell: function (rowid, name, val, iRow, iCol) {
                if (rowid != 0) { }
                return false;
            },
            errorCell: function () {                   //function calling when cell exception occured
                console.log('An error has occurred while processing your request.');
            }

        });

        return false;
    }

    //function CreateTimeSheetJqGridForSecondFortnightOf13Days(gridId, gridUrl, gridColumnNameList, gridColumnModelList) 
    function CreateTimeSheetJqGridForSecondFortnightOf13Days(gridId, gridUrl) {

        $('#' + gridId).jqGrid({
            url: gridUrl,
            datatype: "json",
            mtype: 'POST',
            colNames: [
                    'Id',
                    'ProjectNo',
                    'Project No',
                    'IsProject',
                    'IsApprovalStatus',
                    'Approval Status',
                    'IsSubmittedTo',
                    'SubmittedTo',
                    'Submitted To',
                    'IsActivity',
                    'Activity',
                    'IsCompleted',
                    'Completed',
                    'Is Complete',
                    'IsEdited',

                    '16',
                    '17',
                    '18',
                    '19',
                    '20',
                    '21',
                    '22',
                    '23',
                    '24',
                    '25',
                    '26',
                    '27',
                    '28'
                    ],
            //colNames: gridColumnNameList,
            //colModel: gridColumnModelList,
            colModel: [
                                                { name: 'Id', index: 'Id', key: true, hidden: true },
                                                { name: 'ProjectNo', index: 'ProjectNo', hidden: true },
                                                { name: 'ProjectText', index: 'ProjectText', width: 100, align: 'left', hidden: false },
                                                { name: 'IsProject', index: 'IsProject', hidden: true },
                                                { name: 'IsApprovalStatus', index: 'IsApprovalStatus', hidden: true },
                                                { name: 'ApprovalStatus', index: 'ApprovalStatus', width: 120, align: 'center' },
                                                { name: 'IsSubmittedTo', index: 'IsSubmittedTo', hidden: true },
                                                { name: 'SubmittedTo', index: 'SubmittedTo', hidden: true },
                                                { name: 'SubmittedText', index: 'SubmittedText', width: 200, align: 'center' },

                                                { name: 'IsActivity', index: 'IsActivity', hidden: true },
                                                { name: 'Activity', index: 'Activity', width: 100, align: 'center' },
                                                { name: 'IsCompleted', index: 'IsCompleted', hidden: true },
                                                { name: 'Completed', index: 'Completed', hidden: true },
                                                { name: 'CompletedText', index: 'CompletedText', width: 100, align: 'center' },
                                                { name: 'IsEdited', index: 'IsEdited', hidden: true, editable: true },

                                                { name: 'Day16', index: 'Day16', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day17', index: 'Day17', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day18', index: 'Day18', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day19', index: 'Day19', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day20', index: 'Day20', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day21', index: 'Day21', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day22', index: 'Day22', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day23', index: 'Day23', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day24', index: 'Day24', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day25', index: 'Day25', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day26', index: 'Day26', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day27', index: 'Day27', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} },
                                                { name: 'Day28', index: 'Day28', width: 80, align: 'center', formatter: 'number', editable: true, editrules: { number: true} }

                                                ],
            cmTemplate: { sortable: false },
            cellEdit: true,
            cellsubmit: 'clientArray',
            height: 'auto',
            autowidth: true,
            grouping: false,
            sortname: 'id',                     //default sort column name
            sortorder: "desc",                       //sorting order
            viewrecords: true,                         //by default records show?
            loadonce: false,
            multiselect: false,                        //checkbox list
            //shrinkToFit: true,
            footerrow: true,
            loadComplete: function (data) {

                //Get Hidden Field Value
                var hdMergeCellGroupColumnNameListValue = $("#hdMergeCellGroupColumnNameList").val();
                var hdFooterColumnNameListValue = $("#hdFooterColumnNameList").val();
                var hdFooterTextColumnNameValue = $("#hdFooterTextColumnName").val();
                var hdMergeColumnHeaderStartColumnNameValue = $("#hdMergeColumnHeaderStartColumnName").val();
                var hdMergeColumnHeaderNumberOfColumnsValue = $("#hdMergeColumnHeaderNumberOfColumns").val();
                var hdHighLightColumnNameListValue = $("#hdHighLightColumnNameList").val();
                var hdJqGridUrlValue = $("#hdJqGridUrl").val();
                //Get Hidden Field Value

                //Pass To Array Hidden Field Value
                var mergeCellGroupColumnNameList = hdMergeCellGroupColumnNameListValue.split(",");
                var footerColumnNameList = hdFooterColumnNameListValue.split(",");
                var footerTextColumnName = hdFooterTextColumnNameValue;
                var mergeColumnHeaderStartColumnName = hdMergeColumnHeaderStartColumnNameValue;
                var mergeColumnHeaderNumberOfColumns = hdMergeColumnHeaderNumberOfColumnsValue;
                var highLightColumnNameList = hdHighLightColumnNameListValue.split(",");
                var jqGridUrl = hdJqGridUrlValue;
                //Pass To Array Hidden Field Value

                //Merge Cell Need: columnNameList FROM SERVER ( mergeCellGroupColumnNameList )
                MergeGridCellGroupWise('timeSheetJQGrid', columnNameList = mergeCellGroupColumnNameList);

                //Set Total an Grand Total Need: columnNameList, footerTextColumnName FROM SERVER (footerColumnNameList, footerTextColumnName)
                SetFooterTotalAndFlexiColumnWise('timeSheetJQGrid', this, columnNameList = footerColumnNameList, footerTextColumnName = footerTextColumnName);

                //Merge GridColumns Header Need: startColumnName, numberOfColumns FROM SERVER ( mergeColumnHeaderStartColumnName, mergeColumnHeaderNumberOfColumns )
                MergeGridColumnsHeader('timeSheetJQGrid', mergeColumnHeaderStartColumnName, mergeColumnHeaderNumberOfColumns, "Days");

                //GridColumn HighLight Need: columnNameList FROM SERVER ( highLightColumnNameList )
                SetGridColumnHighLight('timeSheetJQGrid', columnNameList = highLightColumnNameList);

            },
            loadError: function (xhr, status, str) {   //function calling when grid load exception occured 
                console.log(xhr.msg);           //set div text by error message
            },
            afterSaveCell: function (rowid, name, val, iRow, iCol) {

                if (rowid != 0) {

                    //Get Hidden Field Value
                    var hdOffDayColumnNameListValue = $("#hdOffDayColumnNameList").val();
                    var hdFlexiValueValue = $("#hdFlexiValue").val();
                    //Get Hidden Field Value

                    //Pass To Array Hidden Field Value
                    var offDayColumnNameList = hdOffDayColumnNameListValue.split(",");
                    var flexiValue = hdFlexiValueValue;
                    //Pass To Array Hidden Field Value


                    //Calculate FooterData
                    CalculateFooterTotalAndFlexiWithOffDay('timeSheetJQGrid', this, rowid, name, val, flexiValue, offDayColumnNameList = offDayColumnNameList);

                    //Set Row Data
                    $(this).jqGrid('setCell', rowid, 'IsEdited', 'True');
                }

                return false;
            },
            afterEditCell: function (rowid, name, val, iRow, iCol) {
                if (rowid != 0) { }
                return false;
            },
            errorCell: function () {                   //function calling when cell exception occured
                console.log('An error has occurred while processing your request.');
            }

        });

        return false;
    }

    $(function () {

        $('#btnLoadGrid').click(function () {

            var fortnightId = $('input[name=rdFortnight]:checked').val();

            var timeSheetFilterViewModel = {};
            timeSheetFilterViewModel.FortnightId = fortnightId;

            var paramValue = JSON.stringify({ viewModel: timeSheetFilterViewModel });

            $.ajax({
                url: "/Demo/LoadTimeSheet",
                type: 'POST',
                dataType: 'json',
                data: paramValue,
                contentType: 'application/json; charset=utf-8',
                success: function (result) {

                    console.log(result);

                    if (result.status == "True") {
                        SetHiddenFieldValue(result.data);

                        //console.log(result.data.GridColumnModelNameList);

                        //var gridColumnModelList = BuildJqGridColModel(result.data.GridColumnModelNameList);

                        //console.log(gridColumnModelList);

                        var gridId = "timeSheetJQGrid";
                        var gridUrl = "/Demo/GetTimeSheetDetailsData";

                        //CreateTimeSheetJqGrid(result.data.GridColumnNameList, gridColumnModelList);
                        //CreateTimeSheetJqGridForFirstFortnight(gridId, gridUrl, result.data.GridColumnNameList, gridColumnModelList);

                        var fortnightType = result.data.FortnightType;
                        var fortnightDayNumber = result.data.FortnightDayNumber;

                        if (fortnightType == 1 && fortnightDayNumber == 15) {

                            CreateTimeSheetJqGridForFirstFortnight(gridId, gridUrl);

                        }
                        else if (fortnightType == 2 && fortnightDayNumber == 16) {

                            CreateTimeSheetJqGridForSecondFortnightOf16Days(gridId, gridUrl);

                        }
                        else if (fortnightType == 2 && fortnightDayNumber == 15) {

                            CreateTimeSheetJqGridForSecondFortnightOf15Days(gridId, gridUrl);

                        }
                        else if (fortnightType == 2 && fortnightDayNumber == 14) {

                            CreateTimeSheetJqGridForSecondFortnightOf14Days(gridId, gridUrl);

                        }
                        else if (fortnightType == 2 && fortnightDayNumber == 13) {

                            CreateTimeSheetJqGridForSecondFortnightOf13Days(gridId, gridUrl);

                        }

                    }


                },
                error: function (objAjaxRequest, strError) {
                    var respText = objAjaxRequest.responseText;

                    console.log(respText);
                }

            });

            return false;

        });

        //        $("#timeSheetJQGrid").jqGrid({
        //            url: "/Demo/GetTimeSheetDetailsData",
        //            datatype: "json",
        //            mtype: 'POST',
        //            colNames: ['Id',
        //                       'ProjectNo',
        //                       'Project No',
        //                       'IsProject',
        //                       'IsApprovalStatus',
        //                       'Approval Status',
        //                       'IsSubmittedTo',
        //                       'SubmittedTo',
        //                       'Submitted To',
        //                       'IsActivity',
        //                       'Activity',
        //                       'IsCompleted',
        //                       'Completed',
        //                       'Is Complete',

        //                       '1',
        //                       '2',
        //                       '3',
        //                       '4',
        //                       '5',
        //                       'IsEdited'
        //                       ],
        //            colModel: [
        //                        { name: 'Id', index: 'Id', key: true, hidden: true, sortable: false },
        //                        { name: 'ProjectNo', index: 'ProjectNo', hidden: true, sortable: false },
        //                        { name: 'ProjectText', index: 'ProjectText', sortable: false, width: 100, align: 'left', hidden: false },
        //                        { name: 'IsProject', index: 'IsProject', hidden: true, sortable: false },
        //                        { name: 'IsApprovalStatus', index: 'IsApprovalStatus', hidden: true, sortable: false },
        //                        { name: 'ApprovalStatus', index: 'ApprovalStatus', width: 120, align: 'center', sortable: false },
        //                        { name: 'IsSubmittedTo', index: 'IsSubmittedTo', hidden: true, sortable: false },
        //                        { name: 'SubmittedTo', index: 'SubmittedTo', hidden: true, sortable: false },
        //                        { name: 'SubmittedText', index: 'SubmittedText', width: 200, align: 'center', sortable: false },

        //                        { name: 'IsActivity', index: 'IsActivity', hidden: true, sortable: false },
        //                        { name: 'Activity', index: 'Activity', width: 100, align: 'center', sortable: false },
        //                        { name: 'IsCompleted', index: 'IsCompleted', hidden: true, sortable: false },
        //                        { name: 'Completed', index: 'Completed', hidden: true, sortable: false },
        //                        { name: 'CompletedText', index: 'CompletedText', width: 100, align: 'center', sortable: false },

        //            //{ name: 'DayOne', index: 'DayOne', width: 80, align: 'center', sortable: false, formatter: 'number', editable: true, editrules: { number: true }, classes: 'offday-highlight' },
        //                        {name: 'DayOne', index: 'DayOne', width: 80, align: 'center', sortable: false, formatter: 'number', editable: true, editrules: { number: true }, classes: 'offday-highlight' },
        //                        { name: 'DayTwo', index: 'DayTwo', width: 80, align: 'center', sortable: false, formatter: 'number', editable: true, editrules: { number: true }, classes: 'offday-highlight' },
        //                        { name: 'DayThree', index: 'DayThree', width: 80, align: 'center', sortable: false, formatter: 'number', editable: true, editrules: { number: true} },
        //                        { name: 'DayFour', index: 'DayFour', width: 80, align: 'center', sortable: false, formatter: 'number', editable: true, editrules: { number: true} },
        //                        { name: 'DayFive', index: 'DayFive', width: 80, align: 'center', sortable: false, formatter: 'number', editable: true, editrules: { number: true} },
        //                        { name: 'IsEdited', index: 'IsEdited', hidden: true, sortable: false, editable: true }
        //                        ],
        //            cmTemplate: { sortable: false },
        //            cellEdit: true,
        //            cellsubmit: 'clientArray',
        //            height: 'auto',
        //            autowidth: true,
        //            grouping: false,
        //            sortname: 'id',                     //default sort column name
        //            sortorder: "desc",                       //sorting order
        //            viewrecords: true,                         //by default records show?
        //            loadonce: false,
        //            multiselect: false,                        //checkbox list
        //            footerrow: true,
        //            loadComplete: function () {

        //                //Merge Cell Need: columnNameList FROM SERVER ( mergeCellGroupColumnNameList )
        //                MergeGridCellGroupWise('timeSheetJQGrid', columnNameList = ["ProjectText", "ApprovalStatus", "SubmittedText"]);

        //                //Set Total an Grand Total Need: columnNameList, footerTextColumnName FROM SERVER (footerColumnNameList, footerTextColumnName)
        //                SetFooterTotalAndFlexiColumnWise('timeSheetJQGrid', this, columnNameList = ["DayOne", "DayTwo", "DayThree", "DayFour", "DayFive"], footerTextColumnName = "CompletedText");

        //                //Merge GridColumns Header Need: startColumnName, numberOfColumns FROM SERVER ( mergeColumnHeaderStartColumnName, mergeColumnHeaderNumberOfColumns )
        //                MergeGridColumnsHeader('timeSheetJQGrid', "DayOne", 5, "Days");

        //                //GridColumn HighLight Need: columnNameList FROM SERVER ( highLightColumnNameList )
        //                SetGridColumnHighLight('timeSheetJQGrid', columnNameList = ["DayOne", "DayTwo"]);

        //            },
        //            loadError: function (xhr, status, str) {   //function calling when grid load exception occured 
        //                console.log(xhr.msg);           //set div text by error message
        //            },
        //            afterSaveCell: function (rowid, name, val, iRow, iCol) {

        //                if (rowid != 0) {

        //                    //Calculate FooterData
        //                    //CalculateFooterTotalAndFlexi('timeSheetJQGrid', this, rowid, name, val, 8);
        //                    CalculateFooterTotalAndFlexiWithOffDay('timeSheetJQGrid', this, rowid, name, val, 8, offDayColumnNameList = ["DayOne", "DayTwo"]);

        //                    //Set Row Data
        //                    $(this).jqGrid('setCell', rowid, 'IsEdited', 'True');
        //                }

        //                return false;
        //            },
        //            afterEditCell: function (rowid, name, val, iRow, iCol) {
        //                if (rowid != 0) { }
        //                return false;
        //            },
        //            errorCell: function () {                   //function calling when cell exception occured
        //                console.log('An error has occurred while processing your request.');
        //            }

        //        });

        $('#btnSave').click(function () {

            console.log("Save");

            var jqGrid = $("#timeSheetJQGrid").jqGrid();
            console.log(jqGrid);

            //var jqGridParam = $("#timeSheetJQGrid").jqGrid('getGridParam');
            //console.log(jqGridParam);

            var allData = $("#timeSheetJQGrid").jqGrid('getRowData');
            //console.log(allData);

            for (var i = 0; i < allData.length; i++) {

                //console.log(allData[i]);

                var id = allData[i].Id;
                var projectNo = allData[i].ProjectNo;
                var dayOne = allData[i].DayOne;

            }

            //            //Selected Row Data
            //            var grid = $("#timeSheetJQGrid").jqGrid();
            //            //select grid row by id
            //            var selectRowKey = grid.getGridParam("selrow");  //selected row key no as array           
            //            //selected row key no.
            //            if (selectRowKey > 0) {
            //                //get row collection from grid.
            //                var selectedRowObject = $("#timeSheetJQGrid").getRowData(selectRowKey);

            //                console.log(selectedRowObject);
            //            }
            //            //End Selected Row Data

            //Edited Grid Row Data
            var editGridRowData = $("#grid_id").jqGrid('editGridRow');
            console.log(editGridRowData);

            //Edited Row Data
            var editRowData = $("#grid_id").jqGrid('editRow');
            console.log(editRowData);

            return false;

        });

    });

</script>
