@{
    ViewBag.Title = "Now i am hunk";
}
<div id="timeSheet-list">
    <h2>
        In Hunk Mind</h2>
    <div id="timeSheetForm">
        <div>
            <div>
                <input type="hidden" id="hdFortnightType" name="hdFortnightType" value="" />
                <input type="hidden" id="hdFortnightDayNumber" name="hdFortnightDayNumber" value="" />
                <input type="hidden" id="hdMergeCellGroupColumnNameList" name="hdMergeCellGroupColumnNameList"
                    value="" />
                <input type="hidden" id="hdFooterColumnNameList" name="hdFooterColumnNameList" value="" />
                <input type="hidden" id="hdFooterTextColumnName" name="hdFooterTextColumnName" value="" />
                <input type="hidden" id="hdMergeColumnHeaderStartColumnName" name="hdMergeColumnHeaderStartColumnName"
                    value="" />
                <input type="hidden" id="hdMergeColumnHeaderNumberOfColumns" name="hdMergeColumnHeaderNumberOfColumns"
                    value="" />
                <input type="hidden" id="hdHighLightColumnNameList" name="hdHighLightColumnNameList"
                    value="" />

                <input type="hidden" id="hdChangeColumnNameList" name="hdChangeColumnNameList" value="" />
                <input type="hidden" id="hdChangeColumnHeaderList" name="hdChangeColumnHeaderList"
                    value="" />

                <input type="hidden" id="hdOffDayColumnNameList" name="hd" value="" />
                <input type="hidden" id="hdFlexiValue" name="hd" value="" />
                <input type="hidden" id="hdJqGridUrl" name="hd" value="" />
            </div>
            <div class="editor-field">
                <strong>Fortnight: </strong>
                <input type="radio" id="rdFirstFortnight" name="rdFortnight" value="1" checked="checked" />&nbsp;&nbsp;First
                Fortnight&nbsp;&nbsp;&nbsp;&nbsp;<input type="radio" id="rdSecondFortnight" name="rdFortnight"
                    value="2" />&nbsp;&nbsp;Second Fortnight
            </div>
        </div>
        <br />
        <div>
            <button id="btnLoadGrid" class="button">
                Load Time Sheet
            </button>
        </div>
    </div>
    <br />
    <div id="timeSheetJQGridZone">
        <table id="timeSheetJQGrid" class="scroll" cellpadding="0" cellspacing="0">
        </table>
    </div>
    <br />
    <div id="timeSheet-button">
        <button id="btnSave" class="button">
            Save
        </button>
    </div>
</div>
<style type="text/css">
    .offday-highlight
    {
        color: #00000 !important;
        background-color: #FCF8E3 !important;
    }
    
    .ui-jqgrid tr.jqgrow td
    {
        word-wrap: break-word !important; /* IE 5.5+ and CSS3 */
        white-space: pre-wrap !important; /* CSS3 */
        white-space: -moz-pre-wrap !important; /* Mozilla, since 1999 */
        white-space: -pre-wrap !important; /* Opera 4-6 */
        white-space: -o-pre-wrap !important; /* Opera 7 */
    }
    
    .chk-projectno
    {
    }
    
    .lbl-projectno
    {
    }
    
    .rb-submitted
    {
    }
    
    .chk-complete
    {
    }
    
    .approval-status
    {
    }
    
    .ul-submitted
    {
        padding: 0px !important;
        list-style: none !important;
        margin: 0px !important;
    }
    .columnheader-title
    {
     
    }
    
    .ui-jqgrid .ui-jqgrid-htable th div
    {
        height: auto;
        overflow: hidden;
        padding-bottom: 2px;
        padding-top: 2px;
        position: relative;
        vertical-align: text-top;
        white-space: normal !important;
    }
</style>
<script type="text/javascript">

    function ProjectCheck(id) {

        var allData = $("#timeSheetJQGrid").jqGrid('getRowData');

        var fortnightType = 1;
        var fortnightDayNumber = 15;

        var thisProjectNoRowList = [];

        for (var i = 0; i < allData.length; i++) {

            var rowId = allData[i].Id;
            var projectNo = allData[i].ProjectNo;

            if (projectNo == id) {

                thisProjectNoRowList.push(allData[i]);
            }
        }

        for (var i = 0; i < thisProjectNoRowList.length; i++) {

            var rowId = thisProjectNoRowList[i].Id;
            var projectNo = thisProjectNoRowList[i].ProjectNo;
            var activityId = thisProjectNoRowList[i].IsActivity;

            ProjectNoWiseRowColumnEditable(fortnightType, fortnightDayNumber, rowId, projectNo, activityId);

        }

    }

    function ProjectNoWiseRowColumnEditable(fortnightType, fortnightDayNumber, rowId, projectNo, activityId) {

        var jqGrid = $("#timeSheetJQGrid").jqGrid();

        //Start if
        if (fortnightType == 1 && fortnightDayNumber == 15) {

            console.log(fortnightType);
            console.log(fortnightDayNumber);
            console.log(rowId);
            console.log(projectNo);
            console.log(activityId);

            $("#timeSheetJQGrid").jqGrid('editRow', rowId, true);

        }
        else if (fortnightType == 2 && fortnightDayNumber == 16) {

            CreateTimeSheetJqGridForSecondFortnightOf16Days(gridId, gridUrl);

        }
        else if (fortnightType == 2 && fortnightDayNumber == 15) {

            CreateTimeSheetJqGridForSecondFortnightOf15Days(gridId, gridUrl);

        }
        else if (fortnightType == 2 && fortnightDayNumber == 14) {

            CreateTimeSheetJqGridForSecondFortnightOf14Days(gridId, gridUrl);

        }
        else if (fortnightType == 2 && fortnightDayNumber == 13) {

            CreateTimeSheetJqGridForSecondFortnightOf13Days(gridId, gridUrl);

        }
        //End if

    }

    function CompleteCheck(id, e) {

        //    if (confirm("Confirm! Do you want to complete?")) {
        //        $(e).attr('checked', 'checked');
        //    }
        //    else {
        //        $(e).removeAttr('checked');
        //    }

        var dialogContent = 'Are you sure the task is completed?';
        var dialogDiv = $("<div>" + dialogContent + "</div>");
        dialogDiv.dialog({
            title: "Confirm",
            resizable: false,
            width: 'auto',
            modal: true,
            buttons: [
                        {
                            text: "Yes",
                            click: function () {
                                //add ur stuffs here
                                $(e).attr('checked', 'checked');
                                dialogDiv.dialog("close");
                            }
                        },
                        {
                            text: "No",
                            click: function () {
                                $(e).removeAttr('checked');
                                dialogDiv.dialog("close");
                            }
                        }
                    ]
        });

    }

    function SetGridWidth(gridId) {

        console.log("SetGridWidth");

        var grid = $('#' + gridId).jqGrid();

        $(window).bind("resize", function () {

            var windowWidth = $(window).width();
            var gridOldWidth = grid.jqGrid("getGridParam", "width");
            var gridNewWidth = $(window).width() - 150;

            console.log(windowWidth);
            console.log(gridOldWidth);
            console.log(gridNewWidth);

            var oldWidth = grid.jqGrid("getGridParam", "width"),
        newWidth = $(window).width() - 20;

            if (oldWidth !== newWidth) {
                grid.jqGrid("setGridWidth", newWidth);
            }


        }).trigger("resize");

    }

    function CreateTimeSheetJqGrid(gridId, gridUrl) {

        $('#' + gridId).jqGrid({
            url: gridUrl,
            datatype: "json",
            mtype: 'POST',
            colNames: [
                    'Id',
                    'ProjectNo',
                    'Project No',
                    'IsProject',
                    'IsApprovalStatus',
                    'Approval Status',
                    'IsSubmittedTo',
                    'SubmittedTo',
                    'Submitted To',
                    'IsActivity',
                    'Activity',
                    'IsCompleted',
                    'Completed',
                    'Is Complete',
                    'IsEdited',

                    //'<span class="columnheader-title">WH<br/>1</span>',
                    '1',
                    '2',
                    '3',
                    '4',
                    '5',
                    '6',
                    '7',
                    '8',
                    '9',
                    '10',
                    '11',
                    '12',
                    '13',
                    '14',
                    '15'
                    ],
            colModel: [
                                                { name: 'Id', index: 'Id', key: true, hidden: true },
                                                { name: 'ProjectNo', index: 'ProjectNo', hidden: true },
                                                { name: 'ProjectText', index: 'ProjectText', align: 'left', hidden: false, width: '100px' },
                                                { name: 'IsProject', index: 'IsProject', hidden: true },
                                                { name: 'IsApprovalStatus', index: 'IsApprovalStatus', hidden: true },
                                                { name: 'ApprovalStatus', index: 'ApprovalStatus', align: 'center', width: '80px' },
                                                { name: 'IsSubmittedTo', index: 'IsSubmittedTo', hidden: true },
                                                { name: 'SubmittedTo', index: 'SubmittedTo', hidden: true },

            { name: 'SubmittedText', index: 'SubmittedText', width: '120px' },
            //{ name: 'SubmittedText', index: 'SubmittedText', cellattr: arrtSetting },
            //{name: 'SubmittedText', index: 'SubmittedText', cellattr: submittedMerge },

                                                {name: 'IsActivity', index: 'IsActivity', hidden: true },
                                                { name: 'Activity', index: 'Activity', width: '200px' },
                                                { name: 'IsCompleted', index: 'IsCompleted', hidden: true },
                                                { name: 'Completed', index: 'Completed', hidden: true },
                                                { name: 'CompletedText', index: 'CompletedText', align: 'center', width: '80px' },
                                                { name: 'IsEdited', index: 'IsEdited', hidden: true, editable: true },

                                                            { name: 'Day1', index: 'Day1', align: 'center', formatter: 'number', editable: true, editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
                                                            { name: 'Day2', index: 'Day2', align: 'center', formatter: 'number', editable: true, editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
                                                            { name: 'Day3', index: 'Day3', align: 'center', formatter: 'number', editable: true, editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
                                                            { name: 'Day4', index: 'Day4', align: 'center', formatter: 'number', editable: true, editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
                                                            { name: 'Day5', index: 'Day5', align: 'center', formatter: 'number', editable: true, editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
                                                            { name: 'Day6', index: 'Day6', align: 'center', formatter: 'number', editable: true, editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
                                                            { name: 'Day7', index: 'Day7', align: 'center', formatter: 'number', editable: true, editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
                                                            { name: 'Day8', index: 'Day8', align: 'center', formatter: 'number', editable: true, editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
                                                            { name: 'Day9', index: 'Day9', align: 'center', formatter: 'number', editable: true, editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
                                                            { name: 'Day10', index: 'Day10', align: 'center', formatter: 'number', editable: true, editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
                                                            { name: 'Day11', index: 'Day11', align: 'center', formatter: 'number', editable: true, editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
                                                            { name: 'Day12', index: 'Day12', align: 'center', formatter: 'number', editable: true, editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
                                                            { name: 'Day13', index: 'Day13', align: 'center', formatter: 'number', editable: true, editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
                                                            { name: 'Day14', index: 'Day14', align: 'center', formatter: 'number', editable: true, editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
                                                            { name: 'Day15', index: 'Day15', align: 'center', formatter: 'number', editable: true, editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} }

            //{name: 'Day1', index: 'Day1', align: 'center', formatter: 'number', editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
            //                                                { name: 'Day2', index: 'Day2', align: 'center', formatter: 'number', editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
            //                                                { name: 'Day3', index: 'Day3', align: 'center', formatter: 'number', editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
            //                                                { name: 'Day4', index: 'Day4', align: 'center', formatter: 'number', editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
            //                                                { name: 'Day5', index: 'Day5', align: 'center', formatter: 'number', editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
            //                                                { name: 'Day6', index: 'Day6', align: 'center', formatter: 'number', editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
            //                                                { name: 'Day7', index: 'Day7', align: 'center', formatter: 'number', editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
            //                                                { name: 'Day8', index: 'Day8', align: 'center', formatter: 'number', editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
            //                                                { name: 'Day9', index: 'Day9', align: 'center', formatter: 'number', editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
            //                                                { name: 'Day10', index: 'Day10', align: 'center', formatter: 'number', editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
            //                                                { name: 'Day11', index: 'Day11', align: 'center', formatter: 'number', editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
            //                                                { name: 'Day12', index: 'Day12', align: 'center', formatter: 'number', editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
            //                                                { name: 'Day13', index: 'Day13', align: 'center', formatter: 'number', editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
            //                                                { name: 'Day14', index: 'Day14', align: 'center', formatter: 'number', editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} },
            //                                                { name: 'Day15', index: 'Day15', align: 'center', formatter: 'number', editrules: { number: true, maxValue: 24 }, editoptions: { maxlength: 5} }

                                                ],
            cmTemplate: { sortable: false },
            cellEdit: true,
            cellsubmit: 'clientArray',
            height: 'auto',
            //width: '90%',
            autowidth: true,
            gridview: true,
            grouping: false,
            //sortname: 'id',                     //default sort column name
            //sortorder: "asc",                       //sorting order
            viewrecords: true,                         //by default records show?
            //loadonce: false,
            multiselect: false,                        //checkbox list
            //shrinkToFit: true,
            footerrow: true,
            caption: "Time Sheet Details List",
            loadComplete: function (data) {

                //Get Hidden Field Value
                var hdMergeCellGroupColumnNameListValue = $("#hdMergeCellGroupColumnNameList").val();
                var hdFooterColumnNameListValue = $("#hdFooterColumnNameList").val();
                var hdFooterTextColumnNameValue = $("#hdFooterTextColumnName").val();
                var hdMergeColumnHeaderStartColumnNameValue = $("#hdMergeColumnHeaderStartColumnName").val();
                var hdMergeColumnHeaderNumberOfColumnsValue = $("#hdMergeColumnHeaderNumberOfColumns").val();
                var hdHighLightColumnNameListValue = $("#hdHighLightColumnNameList").val();

                var hdChangeColumnNameListValue = $("#hdChangeColumnNameList").val();
                var hdChangeColumnHeaderListValue = $("#hdChangeColumnHeaderList").val();

                var hdJqGridUrlValue = $("#hdJqGridUrl").val();
                //Get Hidden Field Value

                //Pass To Array Hidden Field Value
                var mergeCellGroupColumnNameList = hdMergeCellGroupColumnNameListValue.split(",");
                var footerColumnNameList = hdFooterColumnNameListValue.split(",");
                var footerTextColumnName = hdFooterTextColumnNameValue;
                var mergeColumnHeaderStartColumnName = hdMergeColumnHeaderStartColumnNameValue;
                var mergeColumnHeaderNumberOfColumns = hdMergeColumnHeaderNumberOfColumnsValue;
                var highLightColumnNameList = hdHighLightColumnNameListValue.split(",");

                var changeColumnNameList = hdChangeColumnNameListValue.split(",");
                var changeColumnHeaderList = hdChangeColumnHeaderListValue.split(",");

                var jqGridUrl = hdJqGridUrlValue;
                //Pass To Array Hidden Field Value

                //Merge Cell Need: columnNameList FROM SERVER ( mergeCellGroupColumnNameList )
                //MergeGridCellGroupWise('timeSheetJQGrid', columnNameList = mergeCellGroupColumnNameList);
                //MergeGridCellGroupWise('timeSheetJQGrid', columnNameList = ["ProjectText", "ApprovalStatus", "SubmittedText"]);
                MergeGridCellGroupWise('timeSheetJQGrid', columnNameList = ["ProjectText", "ApprovalStatus"]);
                //MergeFirstGroupCell('timeSheetJQGrid', columnNameList = ["ProjectText", "ApprovalStatus", "SubmittedText"]);
                //MergeFirstGroupCell('timeSheetJQGrid', "ProjectText");
                //MergeFirstGroupCell('timeSheetJQGrid', "ApprovalStatus");
                //MergeLastRowGroupCell('timeSheetJQGrid', "SubmittedText");
                MergeGridCellByProjectNo('timeSheetJQGrid', "SubmittedText");

                //Set Total an Grand Total Need: columnNameList, footerTextColumnName FROM SERVER (footerColumnNameList, footerTextColumnName)
                SetFooterTotalAndFlexiColumnWise('timeSheetJQGrid', this, columnNameList = footerColumnNameList, footerTextColumnName = footerTextColumnName);

                //Merge GridColumns Header Need: startColumnName, numberOfColumns FROM SERVER ( mergeColumnHeaderStartColumnName, mergeColumnHeaderNumberOfColumns )
                MergeGridColumnsHeader('timeSheetJQGrid', mergeColumnHeaderStartColumnName, mergeColumnHeaderNumberOfColumns, "Days");

                //GridColumn HighLight Need: columnNameList FROM SERVER ( highLightColumnNameList )
                SetGridColumnHighLight('timeSheetJQGrid', columnNameList = highLightColumnNameList);

                //GridColumn HeaderTitle Need: columnNameList FROM SERVER ( changeColumnNameList, changeColumnHeaderList )
                ChangeGridColumnHeaderTitle('timeSheetJQGrid', columnNameList = changeColumnNameList, columnHeaderList = changeColumnHeaderList);

                //Set Grid Width
                //SetGridWidth('timeSheetJQGrid');
                //$(this).jqGrid("setGridWidth", $(window).width() - 20);
                $(this).jqGrid('setColProp', 'Completed', { width: 100 });

            },
            loadError: function (xhr, status, str) {   //function calling when grid load exception occured 
                alert(xhr.msg);           //set div text by error message
            },
            afterSaveCell: function (rowid, name, val, iRow, iCol) {

                if (rowid != 0) {

                    //Get Hidden Field Value
                    var hdOffDayColumnNameListValue = $("#hdOffDayColumnNameList").val();
                    var hdFlexiValueValue = $("#hdFlexiValue").val();
                    //Get Hidden Field Value

                    //Pass To Array Hidden Field Value
                    var offDayColumnNameList = hdOffDayColumnNameListValue.split(",");
                    var flexiValue = hdFlexiValueValue;
                    //Pass To Array Hidden Field Value


                    //Calculate FooterData
                    CalculateFooterTotalAndFlexiWithOffDay('timeSheetJQGrid', this, rowid, name, val, flexiValue, offDayColumnNameList = offDayColumnNameList);

                    //Set Row Data
                    $(this).jqGrid('setCell', rowid, 'IsEdited', 'True');
                }

                //return false;
            },
            //            afterEditCell: function (rowid, name, val, iRow, iCol) {
            //                if (rowid != 0) { }
            //                return false;
            //            },
            //            afterRestoreCell: function (rowid, value, iRow, iCol) {
            //                console.log("afterRestoreCell");
            //            },
            errorCell: function () {                   //function calling when cell exception occured
                alert('An error has occurred while processing your request.');
            }

        });

        return false;
    }

    function submittedMerge(rowId, tv, rawObject, cm, rdata) {
        console.log(rowId);
        console.log(tv);
        console.log(rawObject);
        console.log(cm);
        console.log(rdata);
    }

    function arrtSetting(rowId, val, rawObject, cm) {

        console.log(rowId);
        console.log(val);
        console.log(rawObject);
        console.log(cm);

        var test = cm.name;
        //var result = ' style="display: none;"';
        var result = 'rowspan="4"';

        //        var attr = rawObject.attr[cm.name], result;
        //        if (attr.rowspan) {
        //            result = ' rowspan=' + '"' + attr.rowspan + '"';
        //        } else if (attr.display) {
        //            result = ' style="display:' + attr.display + '"';
        //        }

        console.log(test);

        return result;
    };

    $(function () {

        $('#btnLoadGrid').click(function () {

            var fortnightId = $('input[name=rdFortnight]:checked').val();

            var timeSheetFilterViewModel = {};
            timeSheetFilterViewModel.FortnightId = fortnightId;

            var paramValue = JSON.stringify({ viewModel: timeSheetFilterViewModel });

            $.ajax({
                url: "/Demo/LoadTimeSheetDetails",
                type: 'POST',
                dataType: 'json',
                data: paramValue,
                contentType: 'application/json; charset=utf-8',
                success: function (result) {

                    if (result.status == "True") {

                        if (result.data != null) {

                            SetHiddenFieldValue(result.data);

                            var fortnightType = result.data.FortnightType;
                            var fortnightDayNumber = result.data.FortnightDayNumber;

                            var gridId = "timeSheetJQGrid";
                            var gridUrl = "/Demo/GetTimeSheetDetailsData?fortnightType=" + fortnightType + "&fortnightDayNumber=" + fortnightDayNumber;

                            CreateTimeSheetJqGrid(gridId, gridUrl);

                        } //End data null if

                    } //End status if


                },
                error: function (objAjaxRequest, strError) {
                    var respText = objAjaxRequest.responseText;

                    console.log(respText);
                }

            });

            return false;

        });

        $('#btnSave').click(function () {

            console.log("Save");

            var jqGrid = $("#timeSheetJQGrid").jqGrid();
            console.log(jqGrid);

            //var jqGridParam = $("#timeSheetJQGrid").jqGrid('getGridParam');
            //console.log(jqGridParam);

            var allData = $("#timeSheetJQGrid").jqGrid('getRowData');

            console.log(allData);

            for (var i = 0; i < allData.length; i++) {

                console.log(allData[i]);

                var id = allData[i].Id;
                var projectNo = allData[i].ProjectNo;
                var dayOne = allData[i].DayOne;

            }

            //            //Selected Row Data
            //            var grid = $("#timeSheetJQGrid").jqGrid();
            //            //select grid row by id
            //            var selectRowKey = grid.getGridParam("selrow");  //selected row key no as array           
            //            //selected row key no.
            //            if (selectRowKey > 0) {
            //                //get row collection from grid.
            //                var selectedRowObject = $("#timeSheetJQGrid").getRowData(selectRowKey);

            //                console.log(selectedRowObject);
            //            }
            //            //End Selected Row Data

            //            //Edited Grid Row Data
            //            var editGridRowData = $("#grid_id").jqGrid('editGridRow');
            //            console.log(editGridRowData);

            //            //Edited Row Data
            //            var editRowData = $("#grid_id").jqGrid('editRow');
            //            console.log(editRowData);

            return false;

        });

    });

</script>
